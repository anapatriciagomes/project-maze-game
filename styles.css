html {
  box-sizing: border-box;
  font-size: 16px;
  font-family: 'Roboto', sans-serif;
}

body {
  padding: 0;
  margin: 0 10%;
  text-align: center;
  background-image: url(./images/maze-background-image.png);
  background-size: cover;
  background-repeat: no-repeat;
}

h1 {
  color: white;
  font-size: 3em;
  font-weight: 600;
  margin: 20px 0 50px 0;
  text-shadow: #1e2316 4px 4px 4px;
}

h2 {
  font-size: 1.4em;
  color: white;
  line-height: 1.5em;
  text-shadow: #1e2316 4px 4px 4px;
}

.game-space {
  padding: 20px 50px;
}

#intro-image {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 70px;
  margin-bottom: 70px;
}

#maze-garden-img {
  max-width: 50%;
  max-height: 50%;
  opacity: 0.95;
  border-radius: 5%;
}

#game-area {
  display: none;
  flex-direction: row;
  align-items: center;
  margin: 70px auto;
  justify-content: center;
}

.game-container {
  margin-right: 20px;
}

.game-container.easy {
  display: none;
}

.game-container.normal {
  display: none;
}

.game-container.hard {
  display: none;
}
.directional-buttons {
  display: none;
}

.wall {
  background-image: url(./images/grass.jpg);
  background-size: cover;
  background-repeat: no-repeat;
  width: 30px;
  height: 30px;
}

.path {
  background-image: url(./images/natural-stone-paviment.jpg);
  background-size: cover;
  background-repeat: no-repeat;
  width: 30px;
  height: 30px;
}

.maze-row {
  display: flex;
  margin: 0 auto;
}

.additional-content {
  display: none;
  flex-direction: column;
  align-items: flex-start;
  align-items: center;
  margin-left: 20px;
  color: white;
  font-size: 1.2em;
}

.additional-content button {
  font-size: 1em;
  padding: 5px 20px;
}

#dropdownMenu label {
  color: white;
  font-weight: 600;
  font-size: 1.5em;
}

#difficulty-dropdown {
  width: 200px;
  height: 60px;
  font-size: 1.5em;
  margin: 5px 0 30px 0;
  background-color: #11caf0;
  border: #11caf0 solid 1px;
  border-radius: 5px;
  text-align: center;
  cursor: pointer;
}

#play-button {
  width: 200px;
  height: 60px;
  font-size: 1.5em;
  background-color: #ff0000;
  border: #ff0000 solid 1px;
  border-radius: 5px;
  color: white;
  cursor: pointer;
}

#game-over-image {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9999;
  display: none;
}

#reset-button {
  width: 200px;
  height: 60px;
  font-size: 1.2em;
  background-color: #3d8f1d;
  border: #3d8f1d solid 1px;
  border-radius: 5px;
  color: white;
  cursor: pointer;
}

.game-over-container {
  width: 100vw;
  position: fixed;
  right: 0;
  margin-right: 50px;
  z-index: 10000;
  display: flex;
  flex-direction: column-reverse;
  align-items: flex-end;
  justify-content: flex-end;
  text-align: right;
  display: none;
}

.game-over-text {
  font-size: 2em;
  color: white;
  text-shadow: #1e2316 20px 20px 20px;
  z-index: 10000;
}

#try-again-button {
  background-color: #ff4500;
  color: #fff;
  padding: 10px 20px;
  border: none;
  cursor: pointer;
  z-index: 10000;
  font-size: 2.5em;
}
.gold {
  color: #c69214;
}

@media (max-width: 768px) {
  html {
    font-size: 15px;
  }
  h1 {
    font-size: 1.5em;
  }
  h2 {
    font-size: 1em;
  }

  body {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    text-align: center;
    background-color: #908a3e;
    background-image: none;
  }
  #difficulty-dropdown {
    width: 100px;
    height: 40px;
    font-size: 1em;
  }
  #play-button {
    width: 100px;
    height: 40px;
    font-size: 1em;
  }

  #intro-image {
    display: none;
  }
  #game-area {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: auto;
  }
  .game-container {
    margin: 10px;
  }
  .music {
    display: none;
  }
  .path,
  .wall {
    width: 16px;
    height: 16px;
  }

  /* button layout */
  .directional-buttons {
    width: 16rem;
    height: 16rem;
    /* display the buttons in a grid */
    display: grid;
    /* leave a little gap between columns/rows */
    grid-gap: 0.5rem;
    /* define a 3 x 3 grid with middle column/row larger */
    grid-template-columns: 45fr 60fr 45fr;
    grid-template-rows: 45fr 60fr 45fr;
    /* name the cells in the grid */
    grid-template-areas:
      '....  up  .....'
      'left  ..  right'
      '.... down .....';
  }

  .visually-hidden {
    position: absolute !important;
    height: 1px;
    width: 1px;
    overflow: hidden;
    clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
    clip: rect(1px, 1px, 1px, 1px);
    white-space: nowrap;
  }

  .direction-button {
    color: rgb(55, 50, 50);

    background: currentcolor;
    /* clears default button styles */
    border: none;
    /* makes sure the triangles are moved relative to the button */
    position: relative;
  }

  /* the overlapping outside triangle 
 * actually, it's just a rotated square
 */
  .direction-button:before {
    /* make the triangle display */
    display: block;
    content: '';
    /* make the triangle able to be moved around relative to the button */
    position: absolute;
    /* approximately makes the diagonal the right size */
    width: 4.25rem;
    height: 4.25rem;
    /* rotate the square (to look like a triangle) */
    transform: rotate(45deg);
    /* use the current color value for the background to match the button */
    background: currentcolor;
  }

  /* the inner direction triangle */
  .direction-button:after {
    /* make the triangle display */
    display: block;
    content: '';
    /* make the triangle able to be moved around relative to the button */
    position: absolute;
    /* same border-based triangle trick as before */
    border: 2rem solid transparent;
    /* using color value for border-color to make it easier to change */
    color: rgba(255, 250, 250, 0.6);
  }

  /* when the button is hovered */
  .direction-button:hover {
    /* make the button a different color */
    color: rgb(85, 55, 55);
  }

  /* when the button is pressed */
  .direction-button:active:after {
    /* make the inner triangle a different color! */
    color: rgb(255, 152, 152);
  }

  /* individual button styles */
  .up {
    /* puts the button in the named grid cell */
    grid-area: up;
    /* only curves the outer corners */
    border-radius: 0.5rem 0.5rem 0 0;
  }
  .up:before {
    /* center the overlapping triangle horizontally */
    left: calc(50% - 2.125rem);
    /* position it so it overlaps just right */
    bottom: -2.125rem;
  }
  .up:after {
    /* do the border-based triangle trick */
    border-bottom-color: currentcolor;
    /* center inner triangle horizontally */
    left: calc(50% - 2rem);
    /* position it just right */
    top: -1rem;
  }

  .left {
    /* puts the button in the named grid cell */
    grid-area: left;
    /* only curves the outer corners */
    border-radius: 0.5rem 0 0 0.5rem;
  }
  .left:before {
    /* position it so it overlaps just right */
    right: -2.125rem;
    /* center the overlapping triangle vertically */
    top: calc(50% - 2.125rem);
  }
  .left:after {
    /* do the border-based triangle trick */
    border-right-color: currentcolor;
    /* center inner triangle vertically */
    top: calc(50% - 2rem);
    /* position it just right */
    left: -1rem;
  }

  .right {
    /* puts the button in the named grid cell */
    grid-area: right;
    /* only curves the outer corners */
    border-radius: 0 0.5rem 0.5rem 0;
  }
  .right:before {
    /* position it so it overlaps just right */
    left: -2.125rem;
    /* center the overlapping triangle vertically */
    top: calc(50% - 2.125rem);
  }
  .right:after {
    /* do the border-based triangle trick */
    border-left-color: currentcolor;
    /* center inner triangle vertically */
    top: calc(50% - 2rem);
    /* position it just right */
    right: -1rem;
  }

  .down {
    /* puts the button in the named grid cell */
    grid-area: down;
    /* only curves the outer corners */
    border-radius: 0 0 0.5rem 0.5rem;
  }
  .down:before {
    /* center the overlapping triangle horizontally */
    left: calc(50% - 2.125rem);
    /* position it so it overlaps just right */
    top: -2.125rem;
  }
  .down:after {
    /* do the border-based triangle trick */
    border-top-color: currentcolor;
    /* center inner triangle horizontally */
    left: calc(50% - 2rem);
    /* position it just right */
    bottom: -1rem;
  }
}
